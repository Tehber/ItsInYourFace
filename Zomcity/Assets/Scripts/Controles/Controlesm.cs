//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Controles/Controlesm.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controlesm: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controlesm()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controlesm"",
    ""maps"": [
        {
            ""name"": ""APie"",
            ""id"": ""44e99414-0067-4627-9995-4716b7d749e6"",
            ""actions"": [
                {
                    ""name"": ""Moverse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fa369d4a-cce2-4632-8870-48e874ea510f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interactuar"",
                    ""type"": ""Button"",
                    ""id"": ""36623bb3-94e5-45f6-8c76-e09fa4208ac2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancelar"",
                    ""type"": ""Button"",
                    ""id"": ""c584ac61-e91c-432d-8710-d8d4b958fb7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disparar"",
                    ""type"": ""Button"",
                    ""id"": ""2c93e0bb-93d4-4447-b881-0a20a74a8546"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Construir"",
                    ""type"": ""Button"",
                    ""id"": ""d66c24a3-a338-4da7-ad8c-a9431b67ece0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cambiar"",
                    ""type"": ""Value"",
                    ""id"": ""1103a04d-73d2-49f5-9863-cda878bc6e11"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AbrirMenu"",
                    ""type"": ""Button"",
                    ""id"": ""7641f860-a00c-40e8-b408-74d6b169973f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pausar"",
                    ""type"": ""Button"",
                    ""id"": ""9257da9d-44bd-4e0c-a958-40e9e0cbfa7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""bdcffc0f-f96e-4379-8b76-e5cd7992b7cb"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moverse"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f19ec079-d9ef-4ba3-a19e-a72e9da2d3eb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b75476c5-4a4f-473c-87a2-aff9585720bf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4ec973b5-948e-4497-8bb5-4f129e2d5c84"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4da05898-2757-40be-9835-35e8af63d59f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""695e2822-9be8-4fb6-8a93-81e95a7874b3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interactuar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99332a93-cad4-4983-a6df-cb5c93a3be80"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancelar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89db0fda-b8a9-4a75-9ec6-f780c206199e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Disparar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70fb4647-11c7-4f85-83cb-0a4f6f255363"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Construir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7977c44d-9f43-45c5-96ea-72216f568f20"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cambiar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2be9ee97-9e4d-439e-859b-7aa857ba0f0a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AbrirMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb53d3a4-ec59-4131-a3d3-707005ff9ac6"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pausar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // APie
        m_APie = asset.FindActionMap("APie", throwIfNotFound: true);
        m_APie_Moverse = m_APie.FindAction("Moverse", throwIfNotFound: true);
        m_APie_Interactuar = m_APie.FindAction("Interactuar", throwIfNotFound: true);
        m_APie_Cancelar = m_APie.FindAction("Cancelar", throwIfNotFound: true);
        m_APie_Disparar = m_APie.FindAction("Disparar", throwIfNotFound: true);
        m_APie_Construir = m_APie.FindAction("Construir", throwIfNotFound: true);
        m_APie_Cambiar = m_APie.FindAction("Cambiar", throwIfNotFound: true);
        m_APie_AbrirMenu = m_APie.FindAction("AbrirMenu", throwIfNotFound: true);
        m_APie_Pausar = m_APie.FindAction("Pausar", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // APie
    private readonly InputActionMap m_APie;
    private List<IAPieActions> m_APieActionsCallbackInterfaces = new List<IAPieActions>();
    private readonly InputAction m_APie_Moverse;
    private readonly InputAction m_APie_Interactuar;
    private readonly InputAction m_APie_Cancelar;
    private readonly InputAction m_APie_Disparar;
    private readonly InputAction m_APie_Construir;
    private readonly InputAction m_APie_Cambiar;
    private readonly InputAction m_APie_AbrirMenu;
    private readonly InputAction m_APie_Pausar;
    public struct APieActions
    {
        private @Controlesm m_Wrapper;
        public APieActions(@Controlesm wrapper) { m_Wrapper = wrapper; }
        public InputAction @Moverse => m_Wrapper.m_APie_Moverse;
        public InputAction @Interactuar => m_Wrapper.m_APie_Interactuar;
        public InputAction @Cancelar => m_Wrapper.m_APie_Cancelar;
        public InputAction @Disparar => m_Wrapper.m_APie_Disparar;
        public InputAction @Construir => m_Wrapper.m_APie_Construir;
        public InputAction @Cambiar => m_Wrapper.m_APie_Cambiar;
        public InputAction @AbrirMenu => m_Wrapper.m_APie_AbrirMenu;
        public InputAction @Pausar => m_Wrapper.m_APie_Pausar;
        public InputActionMap Get() { return m_Wrapper.m_APie; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(APieActions set) { return set.Get(); }
        public void AddCallbacks(IAPieActions instance)
        {
            if (instance == null || m_Wrapper.m_APieActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_APieActionsCallbackInterfaces.Add(instance);
            @Moverse.started += instance.OnMoverse;
            @Moverse.performed += instance.OnMoverse;
            @Moverse.canceled += instance.OnMoverse;
            @Interactuar.started += instance.OnInteractuar;
            @Interactuar.performed += instance.OnInteractuar;
            @Interactuar.canceled += instance.OnInteractuar;
            @Cancelar.started += instance.OnCancelar;
            @Cancelar.performed += instance.OnCancelar;
            @Cancelar.canceled += instance.OnCancelar;
            @Disparar.started += instance.OnDisparar;
            @Disparar.performed += instance.OnDisparar;
            @Disparar.canceled += instance.OnDisparar;
            @Construir.started += instance.OnConstruir;
            @Construir.performed += instance.OnConstruir;
            @Construir.canceled += instance.OnConstruir;
            @Cambiar.started += instance.OnCambiar;
            @Cambiar.performed += instance.OnCambiar;
            @Cambiar.canceled += instance.OnCambiar;
            @AbrirMenu.started += instance.OnAbrirMenu;
            @AbrirMenu.performed += instance.OnAbrirMenu;
            @AbrirMenu.canceled += instance.OnAbrirMenu;
            @Pausar.started += instance.OnPausar;
            @Pausar.performed += instance.OnPausar;
            @Pausar.canceled += instance.OnPausar;
        }

        private void UnregisterCallbacks(IAPieActions instance)
        {
            @Moverse.started -= instance.OnMoverse;
            @Moverse.performed -= instance.OnMoverse;
            @Moverse.canceled -= instance.OnMoverse;
            @Interactuar.started -= instance.OnInteractuar;
            @Interactuar.performed -= instance.OnInteractuar;
            @Interactuar.canceled -= instance.OnInteractuar;
            @Cancelar.started -= instance.OnCancelar;
            @Cancelar.performed -= instance.OnCancelar;
            @Cancelar.canceled -= instance.OnCancelar;
            @Disparar.started -= instance.OnDisparar;
            @Disparar.performed -= instance.OnDisparar;
            @Disparar.canceled -= instance.OnDisparar;
            @Construir.started -= instance.OnConstruir;
            @Construir.performed -= instance.OnConstruir;
            @Construir.canceled -= instance.OnConstruir;
            @Cambiar.started -= instance.OnCambiar;
            @Cambiar.performed -= instance.OnCambiar;
            @Cambiar.canceled -= instance.OnCambiar;
            @AbrirMenu.started -= instance.OnAbrirMenu;
            @AbrirMenu.performed -= instance.OnAbrirMenu;
            @AbrirMenu.canceled -= instance.OnAbrirMenu;
            @Pausar.started -= instance.OnPausar;
            @Pausar.performed -= instance.OnPausar;
            @Pausar.canceled -= instance.OnPausar;
        }

        public void RemoveCallbacks(IAPieActions instance)
        {
            if (m_Wrapper.m_APieActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAPieActions instance)
        {
            foreach (var item in m_Wrapper.m_APieActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_APieActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public APieActions @APie => new APieActions(this);
    public interface IAPieActions
    {
        void OnMoverse(InputAction.CallbackContext context);
        void OnInteractuar(InputAction.CallbackContext context);
        void OnCancelar(InputAction.CallbackContext context);
        void OnDisparar(InputAction.CallbackContext context);
        void OnConstruir(InputAction.CallbackContext context);
        void OnCambiar(InputAction.CallbackContext context);
        void OnAbrirMenu(InputAction.CallbackContext context);
        void OnPausar(InputAction.CallbackContext context);
    }
}
